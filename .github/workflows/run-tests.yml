name: run-tests

on:
  push:
    branches: ['master']
    paths: ['FileServer**', 'Directory.Build.props', '.editorconfig', 'global.json', '.github/workflows/run-tests.yml']
  pull_request:
    branches: ['master']
    paths: ['FileServer**', 'Directory.Build.props', '.editorconfig', 'global.json', '.github/workflows/run-tests.yml']

concurrency: # head_ref is only defined on pull_request events, run_id is unique for each workflow run
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run-tests:
    name: run-tests (${{ matrix.os }} ${{ matrix.browser }} sdk${{ matrix.netsdkver }} ${{ matrix.netcfg }})
    runs-on: ${{ matrix.os }}-latest
    permissions: {}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
        browser: [chromium]
        netsdkver: ['8.0']
        netcfg: ['Release']
        include:
          - os: 'ubuntu'
            browser: 'firefox'
            netsdkver: '9.0'
            netcfg: 'Debug'
          - os: 'windows'
            browser: 'firefox'
            netsdkver: '9.0'
            netcfg: 'Debug'
          - os: 'macos'
            browser: 'webkit'
            netsdkver: '9.0'
            netcfg: 'Debug'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        if: ${{ matrix.netsdkver != '8.0' }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup .NET SDK ${{ matrix.netsdkver }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.netsdkver }}.x

      - name: Restore solution
        run: dotnet restore

      - name: Build solution
        run: dotnet build -c ${{ matrix.netcfg }} --no-restore

      - name: Format verify solution
        run: dotnet format --verify-no-changes --no-restore

      - name: Run tests
        run: dotnet test FileServer.Tests -c ${{ matrix.netcfg }} --no-build

      - name: Install Playwright
        run: pwsh FileServer.E2ETests/bin/${{ matrix.netcfg }}/net8.0/playwright.ps1 install --with-deps ${{ matrix.browser }}

      - name: Run E2E tests
        run: dotnet test FileServer.E2ETests -c ${{ matrix.netcfg }} --no-build -- Playwright.BrowserName=${{ matrix.browser }}
